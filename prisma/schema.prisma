// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String     @id @default(uuid())
  name         String     @db.VarChar(30)
  email        String     @unique
  passwordHash String     @map("password_hash")
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @map("updated_at")
  diagrams     Diagrams[]
}

enum Status {
  NOT_STARTED
  UPLOADING
  UPLOADED
  PROCESSING
  PROCESSED
}

model Diagrams {
  id         String       @id @default(uuid())
  userID     String
  User       User?        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String?
  uploadAt   DateTime     @default(now())
  url        String
  status     Status       @default(NOT_STARTED)
  components Components[]
}

model Components {
  id          String    @id @default(uuid())
  Diagrams    Diagrams? @relation(fields: [diagramsId], references: [id], onDelete: Cascade)
  diagramsId  String?
  serviceName String    @default("vultr")
  region      String?   @default("ap-south-1")
  createdAt   DateTime  @default(now())
  Cost        Cost?
}

enum Currency {
  RS
  USD
}

model Cost {
  id            String      @id @default(uuid())
  Component     Components? @relation(fields: [componentsId], references: [id])
  componentsId  String?     @unique
  estimatedCost Float       @default(0.0)
  currency Currency @default(RS)
}
